{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const PizzaCardSlice = createSlice({\n  name: \"card\",\n  initialState: {\n    AddPizza: [],\n    PizzaCards: [],\n    isLoading: true\n  },\n  reducers: {\n    setAddPizza(state, action) {\n      state.AddPizza.push(action.payload);\n    },\n    setPizzaCard(state, action) {\n      state.PizzaCards = action.payload;\n    },\n    updatePizzaType(state, action) {\n      // Найти индекс пиццы с заданным ID\n      const pizzaIndex = state.PizzaCards.findIndex(pizza => pizza.id === action.payload.id);\n\n      // Если пицца с таким ID найдена, обновить значение type\n      if (pizzaIndex !== -1) {\n        state.PizzaCards[pizzaIndex].type = action.payload.type;\n      }\n    }\n  }\n});\nexport const {\n  setAddPizza,\n  setPizzaCard,\n  setIsLoading,\n  updatePizzaType\n} = PizzaCardSlice.actions;\nexport default PizzaCardSlice.reducer;","map":{"version":3,"names":["createSlice","PizzaCardSlice","name","initialState","AddPizza","PizzaCards","isLoading","reducers","setAddPizza","state","action","push","payload","setPizzaCard","updatePizzaType","pizzaIndex","findIndex","pizza","id","type","setIsLoading","actions","reducer"],"sources":["C:/Users/adilh/OneDrive/Рабочий стол/ADIPIZZA-main/src/Redux/slices/Pizza.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const PizzaCardSlice = createSlice({\n  name: \"card\",\n  initialState: {\n    AddPizza: [],\n    PizzaCards: [],\n    isLoading: true,\n  },\n  reducers: {\n    setAddPizza(state, action) {\n      state.AddPizza.push(action.payload);\n    },\n    setPizzaCard(state, action) {\n      state.PizzaCards = action.payload;\n    },\n    updatePizzaType(state, action) {\n      // Найти индекс пиццы с заданным ID\n      const pizzaIndex = state.PizzaCards.findIndex((pizza) => pizza.id === action.payload.id);\n\n      // Если пицца с таким ID найдена, обновить значение type\n      if (pizzaIndex !== -1) {\n        state.PizzaCards[pizzaIndex].type = action.payload.type;\n      }\n    }\n  },\n});\n\nexport const { setAddPizza, setPizzaCard, setIsLoading, updatePizzaType} = PizzaCardSlice.actions;\nexport default PizzaCardSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,cAAc,GAAGD,WAAW,CAAC;EACxCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACL,QAAQ,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACrC,CAAC;IACDC,YAAYA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACJ,UAAU,GAAGK,MAAM,CAACE,OAAO;IACnC,CAAC;IACDE,eAAeA,CAACL,KAAK,EAAEC,MAAM,EAAE;MAC7B;MACA,MAAMK,UAAU,GAAGN,KAAK,CAACJ,UAAU,CAACW,SAAS,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKR,MAAM,CAACE,OAAO,CAACM,EAAE,CAAC;;MAExF;MACA,IAAIH,UAAU,KAAK,CAAC,CAAC,EAAE;QACrBN,KAAK,CAACJ,UAAU,CAACU,UAAU,CAAC,CAACI,IAAI,GAAGT,MAAM,CAACE,OAAO,CAACO,IAAI;MACzD;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,WAAW;EAAEK,YAAY;EAAEO,YAAY;EAAEN;AAAe,CAAC,GAAGb,cAAc,CAACoB,OAAO;AACjG,eAAepB,cAAc,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}