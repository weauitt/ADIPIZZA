{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adilh\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\ADIPIZZA-main\\\\src\\\\components\\\\Cards\\\\PizzaCard\\\\PizzaCard.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PizzaCard(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n  const PizzaCards = useSelector(state => state.Pizza.PizzaCards);\n  const AddPizza = useSelector(state => state.Pizza.AddPizza);\n  const search = useSelector(state => state.Categories.search);\n  React.useEffect(() => {\n    axios.get('https://demo5518646.mockable.io/PizzaCard').then(res => {\n      dispatch(setPizzaCard(res.data.card));\n    });\n  }, []);\n  const AddBtn = (selectedPizza, cardId) => {\n    dispatch(setAddPizza({\n      id: cardId,\n      card: selectedPizza\n    }));\n  };\n  const cardList = PizzaCards ? PizzaCards.filter(card => card.name.toLowerCase().includes(search.toLowerCase())) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.MenuPizza,\n      children: \"\\u0412\\u0441\\u0435 \\u041F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inline,\n      children: cardList.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.img,\n          className: styles.imgPizza,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.radioContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: card.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: card.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => AddBtn(card, card.id),\n          className: styles.btn,\n          children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \", AddPizza.filter(item => item.id === card.id).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(PizzaCard, \"XRdngxif4H0M+i7twOpGw1RP83k=\", true);\n_c = PizzaCard;\nvar _c;\n$RefreshReg$(_c, \"PizzaCard\");","map":{"version":3,"names":["PizzaCard","_ref","_s","id","dispatch","useDispatch","PizzaCards","useSelector","state","Pizza","AddPizza","search","Categories","React","useEffect","axios","get","then","res","setPizzaCard","data","card","AddBtn","selectedPizza","cardId","setAddPizza","cardList","filter","name","toLowerCase","includes","_jsxDEV","children","className","styles","MenuPizza","fileName","_jsxFileName","lineNumber","columnNumber","inline","map","src","img","imgPizza","alt","radioContainer","desc","price","onClick","btn","item","length","_c","$RefreshReg$"],"sources":["C:/Users/adilh/OneDrive/Рабочий стол/ADIPIZZA-main/src/components/Cards/PizzaCard/PizzaCard.jsx"],"sourcesContent":["function PizzaCard({ id }) {\n  const dispatch = useDispatch();\n  const PizzaCards = useSelector((state) => state.Pizza.PizzaCards);\n  const AddPizza = useSelector((state) => state.Pizza.AddPizza);\n  const search = useSelector((state) => state.Categories.search);\n\n  React.useEffect(() => {\n    axios.get('https://demo5518646.mockable.io/PizzaCard').then((res) => {\n      dispatch(setPizzaCard(res.data.card));\n    });\n  }, []);\n\n  const AddBtn = (selectedPizza, cardId) => {\n    dispatch(setAddPizza({ id: cardId, card: selectedPizza }));\n  };\n\n  const cardList = PizzaCards\n    ? PizzaCards.filter((card) =>\n        card.name.toLowerCase().includes(search.toLowerCase())\n      )\n    : [];\n\n  return (\n    <div>\n      <h1 className={styles.MenuPizza}>Все Пиццы</h1>\n      <div className={styles.inline}>\n        {cardList.map((card) => (\n          <div className={styles.card} key={card.id}>\n            <img src={card.img} className={styles.imgPizza} alt=\"logo\" />\n            <h1>{card.name}</h1>\n\n            <div className={styles.radioContainer}>\n              {/* ... */}\n            </div>\n\n            <h4>{card.desc}</h4>\n            <h2>{card.price}</h2>\n            <button\n              onClick={() => AddBtn(card, card.id)}\n              className={styles.btn}\n            >\n              Добавить {AddPizza.filter((item) => item.id === card.id).length}\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}