{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport styles from './cards.module.css';\nimport { Context } from '../../pages/MainPage/MainPage';\nimport CardSkeleton from './CardSkeleton/CardSkeleton';\nimport { useSelector } from 'react-redux';\nfunction Cards() {\n  _s();\n  const {\n    cards,\n    AddBtn,\n    addBtn,\n    isLoading\n  } = useContext(Context);\n  const [ActiveType, setActiveType] = useState(0);\n  const search = useSelector(state => state.filter.search);\n  const ChooseType = index => {\n    setActiveType(index);\n  };\n  const cardList = cards ? cards.filter(card => card.name.toLowerCase().includes(search.toLowerCase())) : [];\n  const valueSearch = useSelector(state => state.filter.valueSearch);\n  return {\n    valueSearch\n  };\n}\n_s(Cards, \"U5U+xskhcnf0STU/6AaUy8kZSu8=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useContext","useState","styles","Context","CardSkeleton","useSelector","Cards","_s","cards","AddBtn","addBtn","isLoading","ActiveType","setActiveType","search","state","filter","ChooseType","index","cardList","card","name","toLowerCase","includes","valueSearch","_c","$RefreshReg$"],"sources":["C:/Users/adilh/OneDrive/Документы/GitHub/adiRepositoriy/src/components/PizzaCard/cards.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport styles from './cards.module.css';\r\nimport { Context } from '../../pages/MainPage/MainPage';\r\nimport CardSkeleton from './CardSkeleton/CardSkeleton';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction Cards() {\r\n  const { cards, AddBtn, addBtn, isLoading } = useContext(Context)\r\n\r\n  const [ActiveType, setActiveType] = useState(0)\r\n  \r\n  const search = useSelector((state) => state.filter.search)\r\n\r\n  const ChooseType = (index) => {\r\n     setActiveType(index)\r\n     }\r\n\r\n  const cardList = cards ? cards.filter(card => card.name.toLowerCase().includes(search.toLowerCase())) : [];\r\n\r\n\r\n  const valueSearch = useSelector((state) => state.filter.valueSearch) \r\n  return (\r\n    {valueSearch }\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,OAAO,QAAQ,+BAA+B;AACvD,OAAOC,YAAY,MAAM,6BAA6B;AACtD,SAASC,WAAW,QAAQ,aAAa;AAGzC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGX,UAAU,CAACG,OAAO,CAAC;EAEhE,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMa,MAAM,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,MAAM,CAAC;EAE1D,MAAMG,UAAU,GAAIC,KAAK,IAAK;IAC3BL,aAAa,CAACK,KAAK,CAAC;EACpB,CAAC;EAEJ,MAAMC,QAAQ,GAAGX,KAAK,GAAGA,KAAK,CAACQ,MAAM,CAACI,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACT,MAAM,CAACQ,WAAW,EAAE,CAAC,CAAC,GAAG,EAAE;EAG1G,MAAME,WAAW,GAAGnB,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACQ,WAAW,CAAC;EACpE,OACE;IAACA;EAAY,CAAC;AAElB;AAACjB,EAAA,CAlBQD,KAAK;EAAA,QAKGD,WAAW,EASNA,WAAW;AAAA;AAAAoB,EAAA,GAdxBnB,KAAK;AAoBd,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}