{"ast":null,"code":"// Ваш текущий код слайса PizzaCardSlice\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const PizzaCardSlice = createSlice({\n  name: \"card\",\n  initialState: {\n    PizzaCards: [],\n    AddPizza: [],\n    ActiveType: '0' // Изменено на строку\n  },\n\n  reducers: {\n    setPizzaCard(state, action) {\n      state.PizzaCards = action.payload;\n    },\n    setAddPizza(state, action) {\n      state.AddPizza.push(action.payload);\n    },\n    setActiveType(state, action) {\n      const {\n        cardId,\n        ActiveType\n      } = action.payload;\n      const cardIndex = state.PizzaCards.findIndex(card => card.id === cardId);\n      if (cardIndex !== -1) {\n        state.PizzaCards[cardIndex].ActiveType = String(ActiveType);\n      }\n      state.ActiveType = String(ActiveType); // Обновите глобальный ActiveType\n    }\n  }\n});\n\nexport const {\n  setAddPizza,\n  setPizzaCard,\n  setActiveType\n} = PizzaCardSlice.actions;\nexport default PizzaCardSlice.reducer;","map":{"version":3,"names":["createSlice","PizzaCardSlice","name","initialState","PizzaCards","AddPizza","ActiveType","reducers","setPizzaCard","state","action","payload","setAddPizza","push","setActiveType","cardId","cardIndex","findIndex","card","id","String","actions","reducer"],"sources":["C:/Users/adilh/OneDrive/Рабочий стол/ADIPIZZA-main/src/Redux/slices/Pizza.js"],"sourcesContent":["// Ваш текущий код слайса PizzaCardSlice\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const PizzaCardSlice = createSlice({\n  name: \"card\",\n  initialState: {\n    PizzaCards: [],\n    AddPizza: [],\n    ActiveType: '0', // Изменено на строку\n  },\n  reducers: {\n    setPizzaCard(state, action) {\n      state.PizzaCards = action.payload;\n    },\n    setAddPizza(state, action) {\n      state.AddPizza.push(action.payload);\n    },\n    setActiveType(state, action) {\n  const { cardId, ActiveType } = action.payload;\n  const cardIndex = state.PizzaCards.findIndex(card => card.id === cardId);\n\n  if (cardIndex !== -1) {\n    state.PizzaCards[cardIndex].ActiveType = String(ActiveType);\n  }\n\n  state.ActiveType = String(ActiveType); // Обновите глобальный ActiveType\n}\n\n    \n  },\n});\n\nexport const { setAddPizza, setPizzaCard, setActiveType } = PizzaCardSlice.actions;\nexport default PizzaCardSlice.reducer;\n"],"mappings":"AAAA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,cAAc,GAAGD,WAAW,CAAC;EACxCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,GAAG,CAAE;EACnB,CAAC;;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,WAAWA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACJ,QAAQ,CAACQ,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACrC,CAAC;IACDG,aAAaA,CAACL,KAAK,EAAEC,MAAM,EAAE;MAC/B,MAAM;QAAEK,MAAM;QAAET;MAAW,CAAC,GAAGI,MAAM,CAACC,OAAO;MAC7C,MAAMK,SAAS,GAAGP,KAAK,CAACL,UAAU,CAACa,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC;MAExE,IAAIC,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBP,KAAK,CAACL,UAAU,CAACY,SAAS,CAAC,CAACV,UAAU,GAAGc,MAAM,CAACd,UAAU,CAAC;MAC7D;MAEAG,KAAK,CAACH,UAAU,GAAGc,MAAM,CAACd,UAAU,CAAC,CAAC,CAAC;IACzC;EAGE;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEM,WAAW;EAAEJ,YAAY;EAAEM;AAAc,CAAC,GAAGb,cAAc,CAACoB,OAAO;AAClF,eAAepB,cAAc,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}